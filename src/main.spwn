extract $
let path = "~"
let indicator = ">"
let running = true

while running {
    let input = get_input("[ {} ] {} ".fmt([path,indicator]))

    let args = input.replace(r"[\s\r\n\t]+"," ").trim().split(" ").filter(v => !v.is_empty())
    if args.length == 0 {continue}
    let cmd = args.shift().lowercase()

    //if cmd == "quit" {break}
	switch cmd{
		case "quit": () {
			[running] = [false]
		}(),
		case "help": () {
			print("quit - Exits the shell.")
			print("help - Displays this list.")
			print("echo - Display a string on the terminal or append content to the end of the file using the > sign.")
			print("cat - Displays contents of a file.")
		}(),
		case "echo": () {
			let curWFile = 1
			let fileCont
			let resCont 
			if args.length >= 1 {

				if args[0] == ">"{
					while curWFile < args.length{
						//ty specky but it still doesnt quite work
						content = $.readfile(args[1])
						$.writefile(args[1], content + args[curWFile])
						curWFile++
					}
				}
				else{
					let curW = 0
					if args.length >= 1 {
						while curW < args.length{
							print(args[curW])
							curW++
						}
					}
				}
				// writefile(args[0], args[0] )
			}
		}(),
		case "cat": () {
			let curRFile = 0
			if args.length >= 1 {
				while curFile < args.length{
					print(readfile(args[curRFile]))
					curRFile++
				}
				curFile = 0
			}
		}(),
		else: () {
			print("Command not found: " + cmd)
		}(),
	}
}
