extract $

empty_line = " " * 8

letters = {
    // alphabet
    a: [
        "  ##  ",
        " #  # ",
        "#    #",
        "######",
        "#    #",
        "#    #",
    ],
    b: [
        "##### ",
        "#    #",
        "##### ",
        "#    #",
        "#    #",
        "##### ",
    ],
    c: [
        " #### ",
        "#    #",
        "#     ",
        "#     ",
        "#    #",
        " #### ",
    ],
    d: [
        "##### ",
        "#    #",
        "#    #",
        "#    #",
        "#    #",
        "##### ",
    ],
    e: [
        "######",
        "#     ",
        "##### ",
        "#     ",
        "#     ",
        "######",
    ],
    f: [
        "######",
        "#     ",
        "##### ",
        "#     ",
        "#     ",
        "#     ",
    ],
    g: [
        " #### ",
        "#    #",
        "#     ",
        "#  ###",
        "#    #",
        " #### ",
    ],
    h: [
        "#    #",
        "#    #",
        "######",
        "#    #",
        "#    #",
        "#    #",
    ],
    i: [
        "#",
        "#",
        "#",
        "#",
        "#",
        "#",
    ],
    j: [
        "     #",
        "     #",
        "     #",
        "     #",
        "#    #",
        " #### ",
    ],
    k: [
        "#    #",
        "#   # ",
        "####  ",
        "#  #  ",
        "#   # ",
        "#    #",
    ],
    l: [
        "#     ",
        "#     ",
        "#     ",
        "#     ",
        "#     ",
        "######",
    ],
    m: [
        "#    #",
        "##  ##",
        "# ## #",
        "#    #",
        "#    #",
        "#    #",
    ],
    n: [
        "#    #",
        "##   #",
        "# #  #",
        "#  # #",
        "#   ##",
        "#    #",
    ],
    o: [
        " #### ",
        "#    #",
        "#    #",
        "#    #",
        "#    #",
        " #### ",
    ],
    p: [
        "##### ",
        "#    #",
        "##### ",
        "#     ",
        "#     ",
        "#     ",
    ],
    q: [
        " #### ",
        "#    #",
        "#    #",
        "#  # #",
        "#   # ",
        " ### #",
    ],
    r: [
        "##### ",
        "#    #",
        "#    #",
        "##### ",
        "#   # ",
        "#    #",
    ],
    s: [
        " #### ",
        "#     ",
        " #### ",
        "     #",
        "#    #",
        " #### ",
    ],
    t: [
        "#####",
        "  #  ",
        "  #  ",
        "  #  ",
        "  #  ",
        "  #  ",
    ],
    u: [
        "#    #",
        "#    #",
        "#    #",
        "#    #",
        "#    #",
        " #### ",
    ],
    v: [
        "#    #",
        "#    #",
        "#    #",
        "#    #",
        " #  # ",
        "  ##  ",
    ],
    w: [
        "#    #",
        "#    #",
        "#    #",
        "# ## #",
        "##  ##",
        "#    #",
    ],
    x: [
        "#    #",
        " #  # ",
        "  ##  ",
        "  ##  ",
        " #  # ",
        "#    #",
    ],
    y: [
        "#   #",
        " # # ",
        "  #  ",
        "  #  ",
        "  #  ",
        "  #  ",
    ],
    z: [
        "######",
        "    # ",
        "   #  ",
        "  #   ",
        " #    ",
        "######",
    ],
    // numbers
    "0": [
        "  ###   ",
        " #   #  ",
        "# #   # ",
        "#  #  # ",
        "#   # # ",
        " #   #  ",
        "  ###   ",
    ],
    "1": [
        "   #   ",
        "  ##   ",
        " # #   ",
        "   #   ",
        "   #   ",
        "   #   ",
        " ##### ",
    ],
    "2": [
        " ##### ",
        "#     #",
        "      #",
        " ##### ",
        "#      ",
        "#      ",
        "#######",
    ],
    "3": [
        " ##### ",
        "#     #",
        "      #",
        " ##### ",
        "      #",
        "#     #",
        " ##### ",
    ],
    "4": [
        "#      ",
        "#    # ",
        "#    # ",
        "#######",
        "     # ",
        "     # ",
        "     # ",
    ],
    "5": [
        "#######",
        "#      ",
        "#      ",
        " ##### ",
        "      #",
        "#     #",
        " ##### ",
    ],
    "6": [
        " ##### ",
        "#     #",
        "#      ",
        "###### ",
        "#     #",
        "#     #",
        " ##### ",
    ],
    "7": [
        "#######",
        "#    # ",
        "    #  ",
        "   #   ",
        "  #    ",
        "  #    ",
        "  #    ",
    ],
    "8": [
        " ##### ",
        "#     #",
        "#     #",
        " ##### ",
        "#     #",
        "#     #",
        " ##### ",
    ],
    "9": [
        " ##### ",
        "#     #",
        "#     #",
        " ######",
        "      #",
        "#     #",
        " ##### ",
    ],
    // special chars
    " ": [], // idk, but it should work in theory
}


banner = (context){
	extract context

	for arg in args {
        text = "".join(arg.lowercase().split(""))

        let lines = ['']*8

        for char in text {
            if !(letters has char) { continue }
            let stripes = letters.get(char)
            let unpush = false
            while stripes.length < 8 {
                if unpush {
                    stripes.unshift(empty_line)
                } else {
                    stripes.push(empty_line)
                }
                unpush = !unpush
            }
            for i in 0..stripes.length {
                let sunpush = false
                while stripes[i].length < 8 {
                    stripes[i] = " " + stripes[i] if sunpush else stripes[i] + " "
                    sunpush = !sunpush
                }
                lines[i] += stripes[i]
            }
        }
        for line in lines {
            print(line)
        }
    }
}

return @command::new(
	name = 'banner',
	description = 'Creates a text banner.',
	call = banner,
)
